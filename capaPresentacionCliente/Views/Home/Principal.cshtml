
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/Content/style.css" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;1,500&display=swap"
          rel="stylesheet" />
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css" />
    <link rel="stylesheet" href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <title>Principal</title>
</head>
<body onload="getLocation()">
    <div class="container">
        <div class="side">
            <div class="header">
                <div class="avatar">
                    <a href="~/Home/Cuenta">
                        @*@con esto me tarigo el nombre y la imagen del usuario actual@*@
                        @{
                            var miObjeto = Session["Cliente"] as CapaEntidad.cliente;
                        }
                        @if (miObjeto != null)
                        {
                            <p></p>
                        }


                        <img src="@Url.Action("GetImagePrincipal", "Perfil", new { id = miObjeto.idCliente })" alt="" />
                    </a>

                </div>
                <div class="title"><samp>@(miObjeto != null ? miObjeto.nombre : Session["nombre"])</samp></div>
                <div id="id" style="display: none">@(miObjeto != null ? miObjeto.idCliente : Session["idCliente"])</div>

            </div>
            <div class="menu">
                <ul>
                    <li class="active" href="@Url.Action("Index","chat")">Mensajes</li>
                </ul>
            </div>
            <div class="messages">
                <div class="avatar">
                    <img src="https://randomuser.me/api/portraits/women/38.jpg" alt="" />
                </div>
                <div class="message">
                    <div class="user">Caroline</div>
                    <div class="text">Lorem ipsum dolor sit amet consectetur adipisicing</div>
                </div>
            </div>
            <div class="messages">
                <div class="avatar">
                    <img src="https://randomuser.me/api/portraits/women/39.jpg" alt="" />
                </div>
                <div class="message">
                    <div class="user">Caroline</div>
                    <div class="text">Lorem ipsum dolor sit amet consectetur adipisicing</div>
                </div>
            </div>
            <div class="messages">
                <div class="avatar">
                    <img src="https://randomuser.me/api/portraits/women/40.jpg" alt="" />
                </div>
                <div class="message">
                    <div class="user">Caroline</div>
                    <div class="text">Lorem ipsum dolor sit amet consectetur adipisicing</div>
                </div>
            </div>
            <div class="messages">
                <div class="avatar">
                    <img src="https://randomuser.me/api/portraits/women/41.jpg" alt="" />
                </div>
                <div class="message">
                    <div class="user">Caroline</div>
                    <div class="text">Lorem ipsum dolor sit amet consectetur adipisicing</div>
                </div>
            </div>
            <div class="messages">
                <div class="avatar">
                    <img src="https://randomuser.me/api/portraits/women/42.jpg" alt="" />
                </div>
                <div class="message">
                    <div class="user">Caroline</div>
                    <div class="text">Lorem ipsum dolor sit amet consectetur adipisicing</div>
                </div>
            </div>
        </div>
        <div class="content">
            <div class="card">
                <div class="responsive">
                    <div class="boxes">
                        <a href="~/Home/Cuenta">
                            <i class="las la-user"></i>
                        </a>

                    </div>
                    <div class="image">
                        <img src="~/imagenes/image001.png" alt="Alternate Text" />
                    </div>
                    <div class="boxes">
                        <a href="#">
                            <i class="las la-sms"></i>
                        </a>

                    </div>
                </div>
                <div class="user">
                    <img class="user" id="user" />
                    <div class="profile">
                        <p id="id2" style="display:none"></p>
                        <div class="name">
                            <span id="nom">20</span>
                            <span id="edad">20</span>
                        </div>
                        <div id="myBtn" class="icon">

                            <i class="las la-eye"></i>


                        </div>

                        <div class="local">
                            <span><b>Descripción:</b></span>
                        </div>
                        <div class="desc">
                            <span id="desc">Hola soy olaf y adoro los abrazos</span>
                        </div>

                    </div>
                </div>
            </div>
            <div class="buttons">
                <div class="no" onclick="Nogusta()">
                    <i class="fas fa-times"></i>
                </div>
                <div class="star" onclick="guardarSuspiro()">
                    <i class="fas fa-star fa"></i>
                </div>
                <div class="heart" onclick="gusta()">
                    <i class="fas fa-heart"></i>
                </div>
            </div>
        </div>
        <!-- Contenido del modal match-->
        <div id="mi-modal" class="modal">
            <div class="match">
                <div class="logo">
                    <img class="logo" src="~/imagenes/logoBla.png" alt="">
                </div>
                <div class="perfiles">
                    <h1>¡Felicidades!</h1>
                    <p>Hiciste un match!</p>
                    <div class="container">
                        <div class="box">
                            <img class="cliente1" src="@Url.Action("GetImage", "preguntasInteres", new { id = miObjeto.idCliente})" alt="">
                            <p class="nom"><samp>@(miObjeto != null ? miObjeto.nombre : Session["nombre"])</samp></p>
                        </div>
                        <div class="box">
                            <img id="cliente2" class="cliente2">
                            <p id="nomMatch" class="nom"><samp></samp></p>
                        </div>
                    </div>
                </div>
                <div class="botones">
                    <div class="boton1" onclick="">
                        <a href="#">
                            Enviar mensaje
                        </a>
                    </div>
                    <div id="miDiv" class="boton2">
                        Seguir desplazando
                    </div>
                </div>
            </div>
        </div>

        <!-- Contenido del modal ver perfil -->
        <div id="myModal" class="perfil-modal">
            <div class="modal-content" style="text-align:left">
                <span class="close">&times;</span>
                <br>

                <div class="name">
                    <b><span id="nom2">20</span> </b>
                    <span id="edad2">20</span>
                </div>
                <span id="genero"> Hola soy olaf y adoro los abrazos </span>

                <hr />
                <div class="local2">
                    <span><b>Descripción:</b></span>
                </div>
                <br>
                <div class="desc">
                    <span id="desc2">Hola soy olaf y adoro los abrazos</span>
                    <br>

                    <hr />



                </div>
                
                    <b>Intereses:</b>

                    <span id="interes">Hola soy olaf y adoro los abrazos</span>

                
                <hr />
                <p><b>Preferencia:</b></p>
                <span id="preferencia">Hola soy olaf y adoro los abrazos</span>
            </div>
        </div>

    </div>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>


        // Obtén el botón que abre el modal
        var btn = document.getElementById("myBtn");

        // Obtén el modal
        var modalperfil = document.getElementById("myModal");

        // Obtén el elemento span que cierra el modal
        var span = document.getElementsByClassName("close")[0];

        // Cuando se haga clic en el botón, muestra el modal
        btn.onclick = function () {
            modalperfil.style.display = "block";
        }

        // Cuando se haga clic en la "x", cierra el modal
        span.onclick = function () {
            modalperfil.style.display = "none";
        }

        // Cuando se haga clic fuera del modal, cierra el modal
        window.onclick = function (event) {
            if (event.target == modal) {
                modalperfil.style.display = "none";
            }
        }





        var div = document.getElementById("miDiv");
        div.addEventListener("click", guardarMatch);



        //// Obtener el modal
        var modal = document.getElementById("mi-modal");
        //// Obtener el botón para cerrar el modal
        var cerrar = document.getElementsByClassName("boton2")[0];

        // Cuando el usuario haga clic en el botón de cerrar, cerrar el modal
        cerrar.onclick = function () {
            modal.style.display = "none";
        }
        //// Cuando el usuario haga clic en cualquier parte fuera del modal, cerrar el modal
        //window.onclick = function (event) {
        //    if (event.target == modal) {
        //        modal.style.display = "none";
        //    }
        //}



        function guardarMatch() {



              $.ajax({
                type: "POST",
                 url: '@Url.Action("guadarMatches", "Home")',
                  data: JSON.stringify({ cliente1: id, cliente2: window.ruta }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                  success: function (response) {

                    console.log('Match exitoso')
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log('Error')
                }
            });




        }


     // Variable para almacenar el intervalo
var intervalo;

function match() {
    $.ajax({
        type: "POST",
        url: '@Url.Action("mostrarMatch", "Home")',
        data: JSON.stringify({ cliente1: id, cliente2: id, cliente3:id }),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            var obj = data.data;
            window.ruta = obj.idCliente;
            var data = '@Url.Action("GetImage", "preguntasInteres")' + '?id=' + encodeURIComponent(window.ruta);
            $("#cliente2").attr("src", data)
            $("#nomMatch").text(obj.nombre)
            if (obj.idCliente == 0) {
                console.log("Error al enviar la datos al servidor.");
            } else {
                $("#mi-modal").css("display", "block");
                // Detener el intervalo cuando el modal esté visible
                clearInterval(intervalo);
            }
        },
        error: function (XMLHttpRequest, textStatus, errorThrown) {
            console.log("Error al enviar la datos al servidor.");
        }
    });
}

// Iniciar el intervalo y guardar la variable de retorno
intervalo = setInterval(match, 5000);

// Cuando se oculta el modal, volver a iniciar el intervalo
$("#mi-modal").on("hidden.bs.modal", function () {
    intervalo = setInterval(match, 5000);
});

// Controlador de eventos de clic del botón "Seguir desplazando"
        $("#miDiv").on("click", function() {
    // Volver a iniciar el intervalo
    intervalo = setInterval(match, 5000);
});




 	var idTarjeta;
        var genTarjeta;

         window.addEventListener('load', function() {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Descubrir", "Home")',
                data: JSON.stringify({ cliente1: id, idCliente: id }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    var obj = data.data;
                    window.ajaxData = obj.idCliente;
                    var data = '@Url.Action("GetImage", "preguntasInteres")' + '?id=' + encodeURIComponent(window.ajaxData);
                    $("#user").attr("src", data);
                    $("#prueba").text(obj.idCliente);
                    $("#nom").text(obj.nombre);
                    $("#nom2").text(obj.nombre);
                    $("#edad").text(obj.edad);
                    $("#edad2").text(obj.edad);
                    $("#desc").text(obj.descripcion);
                    $("#desc2").text(obj.descripcion);
                    idTarjeta = parseInt(obj.idCliente);
                    genTarjeta = parseInt(obj.idCliente);
                    console.log('Datos cargados con éxito');

                    // Segunda petición AJAX dentro de la función success de la primera petición
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("ObtenerInteresesPorCliente", "preguntasInteres")',
                        data: JSON.stringify({ id: idTarjeta }),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            var contenidoTexto = ""; // Variable para almacenar el contenido de texto

                            // Verificar si "data" está definido y es un array con elementos
                            if (typeof data !== 'undefined' && Array.isArray(data) && data.length > 0) {
                                // Iterar sobre los datos y construir el contenido de texto
                                for (var obj of data) {
                                    // Acceder a las propiedades del objeto para obtener los valores
                                    contenidoTexto += "<p>" + obj.oInteres + "</p>"; // Formato de ejemplo, asumiendo que la propiedad deseada se llama "nombre"
                                }
                            } else {
                                contenidoTexto = "No se encontraron intereses."; // Mensaje de error si "data" no está definido, no es un array o está vacio
                            }

                            $("#interes").html(contenidoTexto);
                            console.log(contenidoTexto);
                            console.log('Datos cargados con éxito');
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Error al enviar la ubicación al servidor.");
                        }
                    });
                    // Tercera petición AJAX dentro de la función success de la primera petición
                     $.ajax({
                        type: "POST",
                        url: '@Url.Action("ObtenerPreferenciasPorCliente", "preguntasInteres")',
                        data: JSON.stringify({ id: idTarjeta }),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            var contenidoTexto = ""; // Variable para almacenar el contenido de texto

                            // Verificar si "data" está definido y es un array con elementos
                            if (typeof data !== 'undefined' && Array.isArray(data) && data.length > 0) {
                                // Iterar sobre los datos y construir el contenido de texto
                                for (var obj of data) {
                                    // Acceder a las propiedades del objeto para obtener los valores
                                    contenidoTexto += "<p> " + obj.oPreferencia + "</p>"; // Formato de ejemplo, asumiendo que la propiedad deseada se llama "nombre"
                                }
                            } else {
                                contenidoTexto = "No se encontraron preferencias."; // Mensaje de error si "data" no está definido, no es un array o está vacio
                            }

                            $("#preferencia").html(contenidoTexto);
                            console.log(contenidoTexto);
                            console.log('Datos cargados con éxito');
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Error al enviar la ubicación al servidor.");
                        }
                     });
                     // cuarta petición AJAX dentro de la función success de la primera petición
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("ObtenerGeneroPorCliente", "preguntasInteres")',
                        data: JSON.stringify({ id: genTarjeta }),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            var contenidoTexto = ""; // Variable para almacenar el contenido de texto

                            // Verificar si "data" está definido y es un array con elementos
                            if (typeof data !== 'undefined' && Array.isArray(data) && data.length > 0) {
                                // Iterar sobre los datos y construir el contenido de texto
                                for (var obj of data) {
                                    // Acceder a las propiedades del objeto para obtener los valores
                                    contenidoTexto += "<p> " + obj.ocliente + "</p>"; // Formato de ejemplo, asumiendo que la propiedad deseada se llama "nombre"
                                }
                            } else {
                                contenidoTexto = "No se encontraron intereses."; // Mensaje de error si "data" no está definido, no es un array o está vacio
                            }

                            $("#genero").html(contenidoTexto);
                            console.log(contenidoTexto);
                            console.log('Datos cargados con éxito');
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Error al enviar la ubicación al servidor.");
                        }
                    });

                }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Error al enviar la ubicación al servidor.");
                }
            });
        });


        var id = document.querySelector('#id').innerHTML;



          function guardarSuspiro() {
              $.ajax({
                type: "POST",
                 url: '@Url.Action("guadarSuspiro", "Home")',
                  data: JSON.stringify({ cliente1: id, cliente2: window.ajaxData }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                  success: function (resultado) {
                      if (resultado.resultado == true) {
                          Swal.fire({
                              title: '¡Éxito!',
                              text: 'Has dado un suspiro.',
                              icon: 'success'
                          });
                      } else {
                          Swal.fire({
                              title: '¡Error!',
                              text: 'Ya le has dado un suspiro a este perfil.',
                              icon: 'error'
                          });
                      }

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log('Error')
                }
            });
        }



        function gusta() {


              $.ajax({
                type: "POST",
                 url: '@Url.Action("Matches", "Home")',
                data: JSON.stringify({cliente1: id, cliente2: window.ajaxData, activo:1}),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                  success: function (response) {
                      $.ajax({
                type: "POST",
                 url: '@Url.Action("Descubrir", "Home")',
                data: JSON.stringify({ cliente1: id, idCliente: id }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    var obj = data.data;
                    window.ajaxData = obj.idCliente;
                    var data = '@Url.Action("GetImage", "preguntasInteres")' + '?id=' + encodeURIComponent(window.ajaxData);
                    $("#user").attr("src", data)
                    $("#nom").text(obj.nombre)
                    $("#edad").text(obj.edad)
                    $("#desc").text(obj.descripcion)

                    console.log("Datos obtenidos con exito");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Error al enviar la datos al servidor.");
                        }
            });


                    console.log('Me gusta exitoso')
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log('Error')
                }
            });





        }



           function Nogusta() {



              $.ajax({
                type: "POST",
                 url: '@Url.Action("Matches", "Home")',
                data: JSON.stringify({cliente1: id, cliente2: window.ajaxData, activo:2}),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                  success: function (response) {
                      $.ajax({
                type: "POST",
                 url: '@Url.Action("Descubrir", "Home")',
                data: JSON.stringify({ cliente1: id, idCliente: id }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    var obj = data.data;
                    window.ajaxData = obj.idCliente;
                    var data = '@Url.Action("GetImage", "preguntasInteres")' + '?id=' + encodeURIComponent(window.ajaxData);
                    $("#user").attr("src", data)
                    $("#nom").text(obj.nombre)
                    $("#edad").text(obj.edad)
                    $("#desc").text(obj.descripcion)

                    console.log("Datos obtenidos con exito");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Error al enviar la datos al servidor.");
                        }
            });


                    console.log('No me gusta exitoso')
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log('Error')
                }
            });




        }

        function verPerfil() {
             $.ajax({
                type: "POST",
                 url: '@Url.Action("VerP", "Home")',
                data: JSON.stringify({ idCliente: id}),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    var obj = data.data;
                    var ruta = obj.idCliente;
                    var data = '@Url.Action("GetImage", "preguntasInteres")' + '?id=' + encodeURIComponent(ruta);
                    $("#user").attr("src", data)
                    $("#nom").text(obj.nombre)
                    $("#edad").text(obj.edad)
                    $("#desc").text(obj.descripcion)
                    console.log("Datos obtenidos con exito");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Error al enviar la datos al servidor.");
                        }
                    });

        }







        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                alert("La geolocalización no es compatible con este navegador.");
            }
        }


        function showPosition(position) {

            var id = document.querySelector('#id').innerHTML;

            $.ajax({
                type: "POST",
                 url: '@Url.Action("ubicacion", "Acceso")',
                data: JSON.stringify({ idCliente: id,latitud: position.coords.latitude, longitud: position.coords.longitude }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    alert('Su ubicación esta siendo utilizada')
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert('Error')
                }
            });
        }

    </script>

</body>
</html>
